# =============================================================================
# TELEGRAM ASSISTANT - ENVIRONMENT VARIABLES
# =============================================================================
# Copy this file to .env and fill in your actual API keys and credentials
# DO NOT commit the actual .env file to version control!

# =============================================================================
# TELEGRAM BOT CONFIGURATION
# =============================================================================
# Create bot via @BotFather on Telegram: https://t.me/botfather
# Commands: /newbot -> Choose name -> Get token

TELEGRAM_BOT_TOKEN=your_bot_token_here
TELEGRAM_CHAT_ID=your_chat_id_here

# To find your chat ID:
# 1. Send a message to your bot
# 2. Visit: https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates
# 3. Look for "chat":{"id": NUMBER} in the response

# =============================================================================
# GOOGLE SERVICES CONFIGURATION
# =============================================================================
# Google AI Studio: https://makersuite.google.com/app/apikey
# Used for Gemini AI language model and embeddings

GOOGLE_GEMINI_API_KEY=your_gemini_api_key_here

# Google Cloud Console: https://console.cloud.google.com/apis/credentials
# Enable Google Drive API and Google Docs API
# Create Service Account and download JSON key file

GOOGLE_SERVICE_ACCOUNT_JSON_PATH=path/to/your/service-account-key.json
# OR alternatively, set the JSON content as environment variable:
# GOOGLE_SERVICE_ACCOUNT_JSON={"type": "service_account", "project_id": "..."}

# Google Drive folder ID where files will be monitored
# Get from Google Drive URL: https://drive.google.com/drive/folders/1mkSfXU2li9KPTp0eENhSgmPbb-EinFJI
GOOGLE_DRIVE_FOLDER_ID=your_drive_folder_id_here

# Google Docs document ID for chat history logging (optional)
# Create a Google Doc and get ID from URL: https://docs.google.com/document/d/DOCUMENT_ID_HERE
GOOGLE_DOCS_HISTORY_ID=your_google_docs_document_id_here

# =============================================================================
# VECTOR DATABASE CONFIGURATION
# =============================================================================
# Choose ONE of the following vector storage options:

# OPTION A: Pinecone (as per original n8n workflow)
# Sign up: https://app.pinecone.io/
PINECONE_API_KEY=your_pinecone_api_key_here
PINECONE_ENVIRONMENT=us-east1-aws
PINECONE_INDEX_NAME=wheeey

# OPTION B: Supabase with pgvector (REQUIRED for Phase 1 job queue)
# Sign up: https://supabase.com/
SUPABASE_URL=your_supabase_project_url_here
SUPABASE_KEY=your_supabase_anon_key_here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# For storing application metadata, chat history, processing logs

# OPTION A: Supabase PostgreSQL (recommended for free tier)
DATABASE_URL=postgresql://postgres:password@host:5432/database_name

# OPTION B: Local SQLite (for development only)
# DATABASE_URL=sqlite:///./telegram_assistant.db

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Environment: development, staging, production
ENVIRONMENT=development

# Logging level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# File processing settings
MAX_FILE_SIZE_MB=50
SUPPORTED_FILE_TYPES=pdf,docx,txt,jpg,jpeg,png,xlsx,csv

# AI Processing settings
CHUNK_SIZE=3000
CHUNK_OVERLAP=200
MAX_TOKENS_PER_REQUEST=8192
AI_TEMPERATURE=0.4

# Memory settings for conversation context
MEMORY_WINDOW_SIZE=40
MEMORY_CLEANUP_DAYS=30

# =============================================================================
# WEBHOOK CONFIGURATION
# =============================================================================
# These will be set automatically by your hosting platform

# Your application's public URL (set by Vercel/Railway automatically)
APP_BASE_URL=https://your-app-domain.vercel.app

# Webhook endpoints (automatically generated)
TELEGRAM_WEBHOOK_URL=${APP_BASE_URL}/api/telegram-webhook
GOOGLE_DRIVE_WEBHOOK_URL=${APP_BASE_URL}/api/drive-webhook

# =============================================================================
# OPTIONAL SERVICES
# =============================================================================

# Cloudinary (for image processing and storage)
# Sign up: https://cloudinary.com/
CLOUDINARY_CLOUD_NAME=your_cloudinary_cloud_name
CLOUDINARY_API_KEY=your_cloudinary_api_key
CLOUDINARY_API_SECRET=your_cloudinary_api_secret

# Sentry (for error tracking in production)
# Sign up: https://sentry.io/
SENTRY_DSN=your_sentry_dsn_here

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Set to True to enable debug mode, detailed logging, etc.
DEBUG=True

# Skip certain validations during development
SKIP_WEBHOOK_VERIFICATION=True

# Use mock responses instead of real API calls (for testing)
USE_MOCK_RESPONSES=False